on: [push]

name: year increament counter

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: check day
      run: |
        # get a list of the changed file
        git fetch --prune --unshallow
        STR=$(git diff --name-only HEAD^ HEAD)
        year=$(echo "$STR" | grep -oE "[0-9]{4}" | head -n 1)
        day=$(echo "$STR" | grep -oE "day_[0-9]{2}" | head -n 1)
        
        if [ -z "$year" ] || [ -z "$day" ]; then
            exit 1
        fi
        echo "year=$year" >> $GITHUB_ENV
        echo "day=$day" >> $GITHUB_ENV

    - name: Compile day and run day
      run: |
        rustc --edition 2021 ${{ env.year }}/${{ env.day }}/main.rs -C opt-level=3

        day=${{ env.day }}
        day=$(echo "${day#day_}" | sed 's/^0*//')

        # download input file
        URL=https://adventofcode.com/${{ env.year }}/day/$day/input 
        curl $URL --cookie ${{ secrets.AOC_TOKEN }} > input

        OUTPUT=$(./main input)
        # remove colors Xd
        OUTPUT=$(echo "$OUTPUT" | sed $'s,\x1b\\[[0-9;]*[a-zA-Z],,g')

        regex1="Task one:\s+(\w+)"
        regex2="Task two:\s+(\w+)"

        value_one=$(echo "$OUTPUT" | egrep -o "$regex1" | awk '{print $NF}')
        if [ -n "$value_one" ]; then
          echo "res1=$value_one" >> $GITHUB_ENV
        fi

        value_two=$(echo "$OUTPUT" | egrep -o "$regex2" | awk '{print $NF}')
        if [ -n "$value_two" ]; then
          echo "res2=$value_two" >> $GITHUB_ENV
        fi

        echo "update1=yes" >> $GITHUB_ENV
        echo "update2=yes" >> $GITHUB_ENV

    - name: submit answers
      run: |
        echo "${{ env.res1 }}"
        echo "${{ env.res2 }}"
        # remove day_ and leading 0
        day=${{ env.day }}
        day=$(echo "${day#day_}" | sed 's/^0*//')
        URL=https://adventofcode.com/${{ env.year }}/day/$day/answer 

        STR=$(curl $URL -X POST -H "Content-Type: application/x-www-form-urlencoded" -d "level=1&answer=${{ env.res1 }}" --cookie  ${{ secrets.AOC_TOKEN }})
        SUB="That's the right answer"
        if [[ "$STR" == *"$SUB"* ]]; then
          echo "Part one done"
        fi

        # Need to wait 'a bit' for AOC servers
        sleep 5

        STR=$(curl $URL -X POST -H "Content-Type: application/x-www-form-urlencoded" -d "level=2&answer=${{ env.res2 }}" --cookie  ${{ secrets.AOC_TOKEN }})
        SUB="That's the right answer"
        if [[ "$STR" == *"$SUB"* ]]; then
          echo "Part two done"
        fi

    - name: update README
      run: |
        N=0
        if [ ${{ env.update1 }} == "yes" ]; then
          N=$(( {N}+1 ))
        fi
        if [ ${{ env.update2 }} == "yes" ]; then
          N=$(( {N}+1 ))
        fi
        N=2
        
        if [ -z ${{ env.update1 }} ]; then
          N=$(( N-1 ))
        fi

        if [ -z ${{ env.update2 }} ]; then
          N=$(( N-1 ))
        fi
        
        for (( i=0; i<$N; i++ ))
        do
          YEAR=${{ env.year }}
          input_string=$(awk -v year="$YEAR" '$0 ~ year' README.md)
          hex_color=$(echo "$input_string" | grep -o -E '[0-9a-fA-F]{6}' | cut -d')' -f1)

          decimal_color=$(( 16#${hex_color} ))
          decimal_color=$(( decimal_color - 119048 ))
          hex_color=$( printf "%x\n" ${decimal_color} )

          number=$(echo "$input_string" | sed -E "s/.*${YEAR}-★_([0-9]+)-.*/\1/")
          number="${number:0:2}"
          number=$(( number + 1 ))

          new_line="[![AoC $YEAR](https://img.shields.io/badge/$YEAR-★_$number-$hex_color)](https://adventofcode.com/$YEAR)"

          sed -i "/$YEAR-/c\\$new_line" README.md
        done
    - uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: update(README.md): star count and color









